{"version":3,"sources":["components/FormItem.js","components/AddTransaction.js","hooks/useForm.js","components/Balance.js","helpers/getStatistics.js","components/History.js","ExpenseTrackerApp.js","reportWebVitals.js","index.js"],"names":["FormItem","label","id","placeholder","handleInputChange","formText","className","htmlFor","type","name","onChange","autoComplete","AddTransaction","setTransactions","initialState","useState","data","setData","target","value","useForm","transaction","onSubmit","e","preventDefault","t","document","querySelector","reset","Balance","transactions","totalIcome","totalExpense","balance","forEach","amount","parseInt","getStatistics","History","console","log","length","map","index","desc","borderColor","ExpenseTrackerApp","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d8eed65b.chunk.js","sourcesContent":["import React from 'react'\n\nexport const FormItem = ( { label, id, placeholder, handleInputChange, formText } ) => {\n    return (\n        <div className = 'mb-3'>\n            <label htmlFor={id} className=\"form-label mb-0\">{label}</label>\n            { formText !== \"\" && <p className = 'form-text mt-0'> { formText } </p> }\n            <input \n              type = 'text'\n              id = { id }\n              placeholder = { placeholder } \n              className = 'form-control'\n              name = { id }\n              onChange = { handleInputChange }\n              autoComplete = 'off'\n            />\n        </div>\n    )\n}\n","import React from \"react\";\n\nimport { useForm } from \"../hooks/useForm\";\nimport { FormItem } from \"./FormItem\";\n\nexport const AddTransaction = ({ setTransactions }) => {\n  const [transaction, handleInputChange] = useForm({});\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    setTransactions((t) => [transaction, ...t]);\n    document.querySelector(\"form\").reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <h2 className = 'fs-6 pb-1 border-bottom border-dark'>Añadir una nueva transacción</h2>\n      <FormItem\n        id=\"desc\"\n        placeholder=\"Ingrese una descripción\"\n        label=\"Descripción\"\n        handleInputChange={handleInputChange}\n      />\n      <FormItem\n        id=\"amount\"\n        placeholder=\"Ingrese la cantidad\"\n        label=\"Cantidad\"\n        formText = \"negativo(-) gasto, positivo(+) ingreso\"\n        handleInputChange={handleInputChange}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"w-100 btn btn-primary mb-3 text-align-center mx-auto\"\n      >\n        Añadir transacción\n      </button>\n    </form>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useForm = ( initialState ) => {\n\n    const [data, setData ] = useState( initialState );\n\n    const handleInputChange = ( {target} ) => {\n        setData(\n            {\n                ...data,\n                [ target.name ] : target.value\n            }\n        );\n    }\n\n    return [data, handleInputChange]\n}","import React from \"react\";\n\nimport { getStatistics } from \"../helpers/getStatistics\";\n\nexport const Balance = ({ transactions }) => {\n  const { totalIcome, totalExpense, balance } = getStatistics( transactions );\n\n  return (\n    <section className = 'mb-4 container '>\n      <div className = 'row mb-2'>\n        <p className = 'mb-0 p-0'> Tu balance </p>\n        <p className = 'fw-bold fs-4 p-0'>S/ {balance} </p>\n      </div>\n      <article className = 'row'>\n        <div className = 'col shadow-sm text-center bg-white me-1'>\n          <p>Ingresos</p>\n          <p className = 'text-success'>S/ {totalIcome}</p>\n        </div>\n        <div className = 'col shadow-sm text-center bg-white'>\n          <p>Egresos</p>\n          <p className = 'text-danger'>S/ {totalExpense}</p>\n        </div>\n      </article>\n    </section>\n  );\n};\n","export const getStatistics = ( transactions ) => {\n    let totalIcome = 0;\n    let totalExpense = 0;\n    let balance = 0;\n\n    transactions.forEach( ( transaction ) => {\n        let { amount } = transaction;\n\n        if (amount >= 0) {\n            totalIcome += parseInt(amount);\n        }else {\n            totalExpense += parseInt(amount);\n        }\n\n        balance += parseInt(amount);\n    } ) \n    \n\n    return {\n        totalIcome,\n        totalExpense,\n        balance\n    }\n}","import React from \"react\";\n\nexport const History = ({ transactions } ) => {\n  console.log(transactions.length, typeof transactions);\n  return (\n    <section className = 'w-100 mb-4'>\n      <h2 className = 'fs-6 pb-1 border-bottom border-dark'>Historia</h2>\n      {\n          transactions.length === 0\n          ?\n          <p>No se ha registrado transacciónes </p>\n          :\n          transactions.map( (transaction,index) => {\n            const { desc, amount } = transaction;\n            const borderColor =  ( amount > 0 ) ? 'border-success': 'border-danger';\n            return (\n                <div \n                  className = {`${borderColor} border-end  shadow-sm border-2 d-flex align-items-center pt-2 pb-2 ps-2 mb-2 row bg-white container ms-0  me-0 row`}\n                  key = {index} \n                >\n                    <p className = 'mb-0 col'>\n                      { desc }\n                    </p>\n                    <p className = 'col mb-0 text-end'> {amount} </p>\n                </div>\n            )\n          } )\n      }\n    </section>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\n\nimport { Balance } from \"./components/Balance\";\nimport { History } from \"./components/History\";\n\nimport './index.css';\n\nexport const ExpenseTrackerApp = () => {\n  const initial =  () => JSON.parse(localStorage.getItem('transaction')) || [];\n  const [transactions, setTransactions] = useState( initial );\n\n  useEffect( () => {\n    localStorage.setItem('transaction', JSON.stringify(transactions) );\n  }, [transactions])\n  \n  return (\n    <main className = 'mt-3 mx-auto main'>\n      <h1 className = 'fs-4 fw-bold mb-3 text-center'> Registro de Gastos</h1>\n      <Balance  transactions = { transactions }/>\n      <History transactions = { transactions } />\n      <AddTransaction setTransactions = { setTransactions } />\n    </main>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { ExpenseTrackerApp } from './ExpenseTrackerApp'\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <ExpenseTrackerApp/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}