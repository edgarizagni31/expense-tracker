{"version":3,"sources":["components/FormItem.js","components/AddTransaction.js","hooks/useForm.js","components/Balance.js","helpers/getStatistics.js","components/History.js","ExpenseTrackerApp.js","reportWebVitals.js","index.js"],"names":["FormItem","label","id","placeholder","handleInputChange","formText","className","htmlFor","type","name","onChange","autoComplete","createAlert","text","Swal","fire","title","icon","confirmButtonText","AddTransaction","setTransactions","initialState","useState","data","setData","target","value","useForm","desc","amount","transaction","regexNumber","onSubmit","e","preventDefault","length","test","t","document","querySelector","reset","Balance","transactions","totalIcome","totalExpense","balance","forEach","parseFloat","getStatistics","History","map","index","borderColor","key","ExpenseTrackerApp","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7441e64.chunk.js","sourcesContent":["import React from 'react'\n\nexport const FormItem = ( { label, id, placeholder, handleInputChange, formText } ) => {\n    return (\n        <div className = 'mb-3'>\n            <label htmlFor={id} className=\"form-label mb-0\">{label}</label>\n            { formText !== \"\" && <p className = 'form-text mt-0'> { formText } </p> }\n            <input \n              type = 'text'\n              id = { id }\n              placeholder = { placeholder } \n              className = 'form-control'\n              name = { id }\n              onChange = { handleInputChange }\n              autoComplete = 'off'\n            />\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { useForm } from '../hooks/useForm';\nimport { FormItem } from './FormItem';\nimport Swal from 'sweetalert2';\n\nconst createAlert = ( text) => {\n  return Swal.fire({\n    title: 'Error!',\n    text: text,\n    icon: 'error',\n    confirmButtonText: 'Ok'\n  })\n}\n\nexport const AddTransaction = ({ setTransactions }) => {\n  const [transaction, handleInputChange] = useForm({ desc: \"\", amount: \"\"});\n  const regexNumber = /[1-9]+/;\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n\n    if ( transaction.desc.length === 0 && transaction.amount.length === 0) {\n      createAlert('Los campos no pueden estar vacios.');\n      return;\n    }\n\n    if ( transaction.desc === null  || transaction.desc.length === 0) {\n      createAlert('Por favor ingrese una descripción.')\n      return;\n    }\n\n    if ( transaction.desc.length < 3  || regexNumber.test(transaction.desc) ) {\n      createAlert('Descripción no valida, no puede ser un valor númerico.');\n      return;\n    }\n\n    if ( transaction.amount === null ) {\n      createAlert('Por favor ingrese una cantidad.')\n      return;\n    } \n    \n    if ( transaction.amount.length === 0 || !regexNumber.test(transaction.amount)  ) {\n      createAlert('Cantidad no valida, tiene que ser un valor númerico.')\n      return;\n    }\n\n    setTransactions((t) => [transaction, ...t]);\n    document.querySelector(\"form\").reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmitForm}>\n      <h2 className = 'fs-6 pb-1 border-bottom border-dark'>Añadir una nueva transacción</h2>\n      <FormItem\n        id=\"desc\"\n        placeholder=\"Ingrese una descripción\"\n        label=\"Descripción\"\n        handleInputChange={handleInputChange}\n      />\n      <FormItem\n        id=\"amount\"\n        placeholder=\"Ingrese la cantidad\"\n        label=\"Cantidad\"\n        formText = \"negativo(-) gasto, positivo(+) ingreso\"\n        handleInputChange={handleInputChange}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"w-100 btn btn-primary mb-3 text-align-center mx-auto\"\n      >\n        Añadir transacción\n      </button>\n    </form>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useForm = ( initialState ) => {\n    const [data, setData ] = useState( initialState );\n\n    const handleInputChange = ( {target} ) => {\n        setData(\n            {\n                ...data,\n                [ target.name ] : target.value\n            }\n        );\n    }\n\n    return [data, handleInputChange]\n}","import React from \"react\";\n\nimport { getStatistics } from \"../helpers/getStatistics\";\n\nexport const Balance = ({ transactions }) => {\n  const { totalIcome, totalExpense, balance } = getStatistics( transactions );\n\n  return (\n    <section className = 'mb-4 container '>\n      <div className = 'row mb-2'>\n        <p className = 'mb-0 p-0'> Tu balance </p>\n        <p className = 'fw-bold fs-4 p-0'>S/ {balance} </p>\n      </div>\n      <article className = 'row'>\n        <div className = 'col shadow-sm text-center bg-white me-1'>\n          <p>Ingresos</p>\n          <p className = 'text-success'>S/ {totalIcome}</p>\n        </div>\n        <div className = 'col shadow-sm text-center bg-white'>\n          <p>Egresos</p>\n          <p className = 'text-danger'>S/ {totalExpense}</p>\n        </div>\n      </article>\n    </section>\n  );\n};\n","export const getStatistics = ( transactions ) => {\n    let totalIcome = 0;\n    let totalExpense = 0;\n    let balance = 0;\n\n    transactions.forEach( ( transaction ) => {\n        let { amount } = transaction;\n\n        if (amount >= 0) {\n            totalIcome += parseFloat(amount);\n            \n        }else {\n            totalExpense += parseFloat(amount);\n        }\n\n        balance += parseFloat(amount);\n    } ) \n    \n\n    return {\n        totalIcome,\n        totalExpense,\n        balance\n    }\n}","import React from \"react\";\n\nexport const History = ({ transactions } ) => {\n  return (\n    <section className = 'w-100 mb-4'>\n      <h2 className = 'fs-6 pb-1 border-bottom border-dark'>Historia</h2>\n      {\n          transactions.length === 0\n          ?\n          <p>No se ha registrado transacciónes </p>\n          :\n          transactions.map( (transaction,index) => {\n            const { desc, amount } = transaction;\n            const borderColor =  ( amount > 0 ) ? 'border-success': 'border-danger';\n            return (\n                <div \n                  className = {`${borderColor} border-end  shadow-sm border-2 d-flex align-items-center pt-2 pb-2 ps-2 mb-2 row bg-white container ms-0  me-0 row`}\n                  key = {index} \n                >\n                    <p className = 'mb-0 col'>\n                      { desc }\n                    </p>\n                    <p className = 'col mb-0 text-end'> {amount} </p>\n                </div>\n            )\n          } )\n      }\n    </section>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\n\nimport { Balance } from \"./components/Balance\";\nimport { History } from \"./components/History\";\n\nimport './index.css';\n\nexport const ExpenseTrackerApp = () => {\n  const initial =  () => JSON.parse(localStorage.getItem('transaction')) || [];\n  const [transactions, setTransactions] = useState( initial );\n\n  useEffect( () => {\n    localStorage.setItem('transaction', JSON.stringify(transactions) );\n  }, [transactions])\n  \n  return (\n    <main className = 'mt-3 mx-auto main'>\n      <h1 className = 'fs-4 fw-bold mb-3 text-center'> Registro de Gastos</h1>\n      <Balance  transactions = { transactions }/>\n      <History transactions = { transactions } />\n      <AddTransaction setTransactions = { setTransactions } />\n    </main>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { ExpenseTrackerApp } from './ExpenseTrackerApp'\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <ExpenseTrackerApp/>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}